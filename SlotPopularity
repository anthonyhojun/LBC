---
title: "Slot popularity"
output: html_document
---

#### 2016-12-05 ~ 2016-12-08

```{r, echo = FALSE}
## Filtering date
date  <- "2016-12-05"
user_id <- 10000
```

***

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```

```{r, echo = FALSE, message = FALSE, warning = FALSE}
## Loading

library(ggplot2)
library(ggthemes)
library(scales)
library(readr)
library(stringr)
library(data.table)
library(Hmisc)
library(tidyr)
library(gridExtra)
library(plotly)

## Create system time
sysdate <- format(Sys.Date(), "%Y%m%d")

## Load directory
load_vegas_logs <- file.path("C:/Users/antpc/Desktop/Vegas/Analytics/Query", sysdate, "Vegas_Logs")
load_slot_logs <- file.path("C:/Users/antpc/Desktop/Vegas/Analytics/Query", sysdate, "Slot_Logs")


## Load files

# Vegas logs

vegas_logs_list <- list.files(load_vegas_logs, full.names = TRUE)
vegas_logs <- rbindlist(lapply(vegas_logs_list, read_csv))

# Slot logs

slot_logs_list <- list.files(load_slot_logs, full.names = TRUE)
slot_logs <- rbindlist(lapply(slot_logs_list, read_csv))

```

```{r}
# General filter
slot_logs <- slot_logs[SUBCONTENT == "SPIN" & CREATE_DATE >= date]
```


```{r, echo = FALSE, message = FALSE, warning = FALSE}
#### Slot details --------------------------------

## First slot ----------------

# first_slot <- slot_logs[]
# 
# vegas_logs
# first.slot <- all[APP == "VEGAS" & CREATE_ACCOUNT >= date & UID > 6000 & COUNTRY != "KR"][order(UID, CREATE_DATE)] ##### Filter for marketing dates 
# first.slot <- first.slot[SUBCONTENT == "SPIN", .SD[1], by = UID][, .(UID, ID)]
# first.slot <- first.slot[, .N, by = ID]
# 
# first.slot.graph <- ggplot(first.slot, aes(ID, N, fill = ID, label = round(N/sum(N),2))) +
#   geom_bar(stat = "identity") +
#   scale_fill_few() +
#   theme(legend.position = "none") +
#   geom_text(size = 3.5) +
#   xlab("") +
#   ylab("") +
#   labs(
#     subtitle = "New users"
#   )
```

```{r, echo = FALSE, message = FALSE, warning = FALSE}
## Spin count ----------------

# New accounts

new_spins <- slot_logs[CREATE_ACCOUNT >= date & UID > user_id]
new_spins <- new_spins[, .N, ID]


new_spins_graph <- ggplot(new_spins, aes(ID, N, fill = ID, label = round(N/sum(N),2))) +
  geom_bar(stat = "identity") +
  scale_fill_few() +
  theme(legend.position = "none") +
  geom_text(size = 3.5) +
  xlab("") +
  ylab("") +
  labs(
    subtitle = "New users"
  )

# Existing accs

existing_spins <- slot_logs[CREATE_ACCOUNT < date]
existing_spins <- existing_spins[, .N, ID]

existing_spins_graph <- ggplot(existing_spins, aes(ID, N, fill = ID, label = round(N/sum(N),2))) +
  geom_bar(stat = "identity") +
  scale_fill_few() +
  theme(legend.position = "none") +
  geom_text(size = 3.5) +
  xlab("") +
  ylab("") +
  labs(
    subtitle = "Existing users"
  )
```

```{r}
## Average spins ----------------

# New users

new_avgspins <- slot_logs[CREATE_ACCOUNT >= date & UID > user_id]
new_avgspins <- new_avgspins[, lapply(.SD, sum), .(UID, ID), .SDcols = c("SUM_CNT")]

new_avgspins_graph <- ggplot(new_avgspins, aes(ID, SUM_CNT, fill = ID)) +
  geom_boxplot() +
  ylim(0, quantile(new_avgspins$SUM_CNT, .95)) +
  scale_fill_few() +
  xlab("") +
  ylab("") +
  theme(legend.position = "none") +
  labs(
    title = "New users"
  )


# Test for existing users
#slot_logs[CREATE_ACCOUNT < date]

# Existing users
existing_avgspins <- slot_logs[CREATE_ACCOUNT < date]
existing_avgspins <- existing_avgspins[, lapply(.SD, sum), .(UID, ID), .SDcols = c("SUM_CNT")]


existing_avgspins_graph <- ggplot(existing_avgspins, aes(ID, SUM_CNT, fill = ID)) +
  geom_boxplot() +
  ylim(0, quantile(new_avgspins$SUM_CNT, .95)) +
  scale_fill_few() +
  xlab("") +
  ylab("") +
  theme(legend.position = "none") +
  labs(
    title = "Existing users"
  )


```



```{r, echo = FALSE, message = FALSE, warning = FALSE}
## Popularity count ----------------

# New users

new_popular <- slot_logs[CREATE_ACCOUNT >= date & UID > user_id]
new_popular_sum <- new_popular[, lapply(.SD, sum), .(UID,ID), .SDcols = "SUM_CNT"][order(UID, -SUM_CNT)]
new_popular_max <- new_popular_sum[, .SD[1], UID]
new_popular_count <- new_popular_max[, .N, ID ]

new_pop_graph <- ggplot(new_popular_count, aes(ID, N, fill = ID, label = round(N/sum(N),2))) +
  geom_bar(stat = "identity") +
  scale_fill_few() +
  theme(legend.position = "none") +
  geom_text(size = 3.5) +
  xlab("") +
  ylab("") +
  labs(
   subtitle = "New users"
  )


# Existing users

existing_popular <- slot_logs[CREATE_ACCOUNT < date]
existing_popular_sum <- existing_popular[, lapply(.SD, sum), .(UID,ID), .SDcols = "SUM_CNT"][order(UID, -SUM_CNT)]
existing_popular_max <- existing_popular_sum[, .SD[1], UID]
existing_popular_count <- existing_popular_max[, .N, ID ]

existing_pop_graph <- ggplot(existing_popular_count, aes(ID, N, fill = ID, label = round(N/sum(N),2))) +
  geom_bar(stat = "identity") +
  scale_fill_few() +
  theme(legend.position = "none") +
  geom_text(size = 3.5) +
  xlab("") +
  ylab("") +
  labs(
    subtitle = "Existing users"
  )
```

```{r}
## Average spins ----------------

# New users

new_pop_avgspins <- slot_logs[CREATE_ACCOUNT >= date & UID > user_id]
new_pop_avgspins <- new_pop_avgspins[, lapply(.SD, sum), .(UID,ID), .SDcols = "SUM_CNT"][order(UID, -SUM_CNT)]
new_pop_avespins_max <- new_pop_avgspins[, .SD[1], UID]
 
new_pop_avespins_max_graph <- ggplot(new_pop_avespins_max, aes(ID, SUM_CNT, fill = ID)) +
  geom_boxplot() +
  ylim(0, quantile(new_pop_avespins_max$SUM_CNT, .95)) +
  scale_fill_few() +
  xlab("") +
  ylab("") +
  theme(legend.position = "none") +
  labs(
    title = "New users"
  )

# Existing users

existing_pop_avgspins <- slot_logs[CREATE_ACCOUNT < date]
existing_pop_avgspins <- existing_pop_avgspins[, lapply(.SD, sum), .(UID,ID), .SDcols = "SUM_CNT"][order(UID, -SUM_CNT)]
existing_pop_avespins_max <- existing_pop_avgspins[, .SD[1], UID]
 
existing_pop_avespins_max_graph <- ggplot(existing_pop_avespins_max, aes(ID, SUM_CNT, fill = ID)) +
  geom_boxplot() +
  ylim(0, quantile(existing_pop_avespins_max$SUM_CNT, .95)) +
  scale_fill_few() +
  xlab("") +
  ylab("") +
  theme(legend.position = "none") +
  labs(
    title = "Existing users"
  )
```

```{r, echo = FALSE, message = FALSE, warning = FALSE}
# # First slot enter information
# 
# ## First slot spin boxplot
# 
# firstslot <- all[APP == "VEGAS" & CREATE_ACCOUNT >= "2016-12-05 14:00" & UID > 6240 & COUNTRY != "KR"][order(UID, CREATE_DATE)]
# filtered <- firstslot[SUBCONTENT == "SPIN", .SD[1], by = UID][, .(UID, ID)]
# setnames(filtered, "ID", "FIRSTSLOT")
# 
# firstslot <- firstslot[,.(UID, CREATE_DATE, CONTENT, SUBCONTENT, ID)]
# 
# merged <- merge(firstslot, filtered, by = "UID", all.x = TRUE)
# merged <- merged[SUBCONTENT == "SPIN"]
# 
# merged <- merged[ID == FIRSTSLOT]
# invisible(merged[, DIFF := as.numeric(difftime(CREATE_DATE, shift(CREATE_DATE), units = "mins")), by = UID])
# merged <- merged[DIFF < 1]
# 
# timed <- merged
# merged <- merged[, .N, by = .(UID, ID)]
# 
# firstslot <- ggplot(merged, aes(ID, N, fill = ID)) +
#   geom_boxplot() +
#   ylim(0, quantile(merged$N, .95)) +
#   scale_fill_few() +
#   theme(legend.position = "none") +
#   xlab("") +
#   ylab("") +
#   labs(
#     title = "Spins"
#   )
# 
# ###
# #time
# 
# timed <- timed[, .SD[c(1, .N)], UID]
# invisible(timed[, DIFF := as.numeric(difftime(CREATE_DATE, shift(CREATE_DATE), units = "mins")), by = UID])
# timed <- na.omit(timed)
# invisible(timed[, DIFF := round(DIFF)])
# timed <- timed[DIFF < 60]
# 
# firstslot.time <- ggplot(timed, aes(ID, DIFF, fill = ID)) +
#   geom_boxplot() +
#   scale_fill_few() +
#   theme(legend.position = "none") +
#   xlab("") +
#   ylab("") +
#   labs(
#     title = "Minutes"
#   )

```


```{r, eval = FALSE, echo = FALSE, message = FALSE, warning = FALSE}
#
first.slot.graph
```

```{r, eval = FALSE, echo = FALSE, message = FALSE, warning = FALSE}
ggplotly(firstslot)
ggplotly(firstslot.time)
```

### 스핀 횟수  
```{r, echo = FALSE, message = FALSE, warning = FALSE}
grid.arrange(new_spins_graph, existing_spins_graph, nrow = 1)
```

### 스핀 기반 슬롯 정보
```{r, echo = FALSE, message = FALSE, warning = FALSE}
ggplotly(new_avgspins_graph)
ggplotly(existing_avgspins_graph)
```

### 슬롯 인기 
```{r, echo = FALSE, message = FALSE, warning = FALSE}
grid.arrange(new_pop_graph, existing_pop_graph, nrow = 1)
```

### 인기 기반 스핀 정보  
```{r, echo = FALSE, message = FALSE, warning = FALSE}
ggplotly(new_pop_avespins_max_graph)
ggplotly(existing_pop_avespins_max_graph)
```




